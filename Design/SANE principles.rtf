{\rtf1\ansi\deff0\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset2 Symbol;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\fswiss\fprq0\fcharset128 Arial;}{\f4\froman\fprq0\fcharset128 ;}{\f5\fnil\fprq2\fcharset0 Microsoft YaHei;}}
{\colortbl;\red0\green0\blue0;\red128\green128\blue128;}
{\stylesheet{\s0\snext0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af2\langfe2052\dbch\af4\afs24\lang1081\loch\f0\fs24\lang1033 Default;}
{\s15\sbasedon0\snext16{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\hich\af2\langfe2052\dbch\af5\loch\f2\fs28\lang1033 Heading;}
{\s16\sbasedon0\snext16{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\hich\af0\langfe2052\dbch\af0\loch\f0\fs24\lang1033 Text body;}
{\s17\sbasedon16\snext17{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\hich\af3\langfe2052\dbch\af0\loch\f0\fs24\lang1033 List;}
{\s18\sbasedon0\snext18{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb120\sa120\cf0\i\hich\af3\langfe2052\dbch\af0\ai\loch\f0\fs24\lang1033 Caption;}
{\s19\sbasedon0\snext19{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe2052\dbch\af0\loch\f0\fs24\lang1033 Index;}
}{\info{\creatim\yr0\mo0\dy0\hr0\min0}{\revtim\yr0\mo0\dy0\hr0\min0}{\printim\yr0\mo0\dy0\hr0\min0}{\comment OpenOffice}{\vern4160}}\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709

{\*\pgdsctbl
{\pgdsc0\pgdscuse195\pgwsxn12240\pghsxn15840\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\pgdscnxt0 Default;}}
\formshade{\*\pgdscno0}\paperh15840\paperw12240\margl1134\margr1134\margt1134\margb1134\sectd\sbknone\sectunlocked1\pgndec\pgwsxn12240\pghsxn15840\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
\pgndec\pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af2\langfe2052\dbch\af4\afs24\lang1081\loch\f0\fs24\lang1033\qc{\b\afs28\ab\rtlch \ltrch\loch\fs28
SANE principles}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af2\langfe2052\dbch\af4\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af2\langfe2052\dbch\af4\afs24\lang1081\loch\f0\fs24\lang1033{\b\afs28\ab\rtlch \ltrch\loch\fs28
S}{\afs28\rtlch \ltrch\loch\fs28
eparate tools from their applications and programming from design.  Limit the amount of project-specific code as much as possible.  Instead, strive to create flexible tools that can be used by designers to create content.  Note that this principle is a logical consequence of DRY (don't repeat yourself) and }{\i\afs28\ai\rtlch \ltrch\loch\fs28
Expose everything}{\afs28\rtlch \ltrch\loch\fs28
.  Further, this principle should not be pursued in ways that violate }{\i\afs28\ai\rtlch \ltrch\loch\fs28
Abstract only when needed}{\afs28\rtlch \ltrch\loch\fs28
.}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af2\langfe2052\dbch\af4\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af2\langfe2052\dbch\af4\afs24\lang1081\loch\f0\fs24\lang1033{\b\afs28\ab\rtlch \ltrch\loch\fs28
A}{\afs28\rtlch \ltrch\loch\fs28
bstract only when needed.  Do not create abstractions based on speculative generality unless such generality is trivial to add or is the logical consequence of adhering to other design standards.  Create what is needed for the project specification at the current stage of development, then add abstractions as new features are called for.  The best abstractions typically flow naturally from non-abstract but otherwise clean code\'97such as by taking a static element of code and making it variable so that branching logic collapses into a single process where the result varies based on the contents of the variable steps.}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af2\langfe2052\dbch\af4\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af2\langfe2052\dbch\af4\afs24\lang1081\loch\f0\fs24\lang1033{\b\afs28\ab\rtlch \ltrch\loch\fs28
N}{\afs28\rtlch \ltrch\loch\fs28
ever take control away from the user...and certainly not from other developers.  From a design perspective, there are no exceptions.  There are, however, exceptions from a safety perspective, such as protecting the user from dangerous mistakes, protecting the system from dangerous users, and intellectual property concerns, which are more important than maximum-quality design and may require some restrictions on control.  In general, however, the purpose of technology is to extend the capabilities of its users and so imposing restrictions is antithetical to this purpose.}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af2\langfe2052\dbch\af4\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af2\langfe2052\dbch\af4\afs24\lang1081\loch\f0\fs24\lang1033{\b\afs28\ab\rtlch \ltrch\loch\fs28
E}{\afs28\rtlch \ltrch\loch\fs28
xpose everything.  You cannot possibly know the full range of applications for which a piece of code will be used.  As with not taking away control, there are exceptions for safety but not for usability.  When deciding whether to make a something public or private, instead of asking: \'93is there a good reason why another system will need to access this data?\'94 which is nothing more than a reflection of the limits of your own imagination, instead ask: \'93will allowing access to this data cause my system to break or otherwise become compromised?\'94}
\par }